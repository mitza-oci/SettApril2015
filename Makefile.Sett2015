#----------------------------------------------------------------------------
#       Macros
#----------------------------------------------------------------------------
CFG = Debug

ifeq ($(CFG), Debug)
CC            = gcc
CXX           = g++
LD            = $(CXX) $(CCFLAGS) $(CPPFLAGS)
AR            = ar
CPPFLAGS      = $(PICFLAGS) $(GENFLAGS) -std=c++1y -Wall -I"../gtest-1.7.0/include"
OBJEXT        = .o
OUTPUT_OPTION = -o "$@"
COMPILE.c     = $(CC) $(CFLAGS) $(CPPFLAGS) -c
COMPILE.cc    = $(CXX) $(CCFLAGS) $(CPPFLAGS) -c
RESEXT        = .o
LDFLAGS       = -L"."
CCC           = $(CXX)
MAKEFILE      = Makefile.Sett2015
DEPENDENCIES  = .depend.$(MAKEFILE)
BTARGETDIR    = ./
BIN           = $(BTARGETDIR)Sett2015$(EXESUFFIX)$(EXEEXT)
CAT           = cat
MV            = move /y
RM            = del
CP            = cp -p
NUL           = nul
MKDIR         = mkdir
TESTDIRSTART  = if not exist
TESTDIREND    = 
TOUCH         = compat\touch.pl
EXEEXT        = .exe
LIBPREFIX     = 
LIBSUFFIX     = d
GENFLAGS      = -g
LDLIBS        = "../gtest-1.7.0/make/gtest_main.a" -lwsock32 -lnetapi32
OBJS          = obj/BigInt$(OBJEXT) obj/TestBigInt$(OBJEXT)
SRC           = BigInt.cpp TestBigInt.cpp
LINK.cc       = $(LD) $(LDFLAGS)
EXPORTFLAGS   = 
DEPLIBS       = $(foreach lib, , $(foreach libpath, ., $(wildcard $(libpath)/lib$(lib).lib)))
endif
ifeq ($(CFG), Release)
CC            = gcc
CXX           = g++
LD            = $(CXX) $(CCFLAGS) $(CPPFLAGS)
AR            = ar
CPPFLAGS      = $(PICFLAGS) $(GENFLAGS) -std=c++1y -Wall -I"../gtest-1.7.0/include"
OBJEXT        = .o
OUTPUT_OPTION = -o "$@"
COMPILE.c     = $(CC) $(CFLAGS) $(CPPFLAGS) -c
COMPILE.cc    = $(CXX) $(CCFLAGS) $(CPPFLAGS) -c
RESEXT        = .o
LDFLAGS       = -L"."
CCC           = $(CXX)
MAKEFILE      = Makefile.Sett2015
DEPENDENCIES  = .depend.$(MAKEFILE)
BTARGETDIR    = ./
BIN           = $(BTARGETDIR)Sett2015$(EXESUFFIX)$(EXEEXT)
CAT           = cat
MV            = move /y
RM            = del
CP            = cp -p
NUL           = nul
MKDIR         = mkdir
TESTDIRSTART  = if not exist
TESTDIREND    = 
TOUCH         = compat\touch.pl
EXEEXT        = .exe
LIBPREFIX     = 
LIBSUFFIX     = 
GENFLAGS      = -O
LDLIBS        = "../gtest-1.7.0/make/gtest_main.a" -lwsock32 -lnetapi32
OBJS          = obj/BigInt$(OBJEXT) obj/TestBigInt$(OBJEXT)
SRC           = BigInt.cpp TestBigInt.cpp
LINK.cc       = $(LD) $(LDFLAGS)
EXPORTFLAGS   = 
DEPLIBS       = $(foreach lib, , $(foreach libpath, ., $(wildcard $(libpath)/lib$(lib).lib)))
endif

#----------------------------------------------------------------------------
#       Local targets
#----------------------------------------------------------------------------

all: $(BIN)

$(BIN): $(OBJS) $(DEPLIBS)
	@$(TESTDIRSTART) "$(BTARGETDIR)" $(TESTDIREND) $(MKDIR) "$(BTARGETDIR)"
	$(LINK.cc) $(OBJS) $(LDLIBS) $(OUTPUT_OPTION)

generated: $(GENERATED_DIRTY)
	@-:

obj/BigInt$(OBJEXT): BigInt.cpp
	@$(TESTDIRSTART) "obj/" $(TESTDIREND) $(MKDIR) "obj/"
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) BigInt.cpp

obj/TestBigInt$(OBJEXT): TestBigInt.cpp
	@$(TESTDIRSTART) "obj/" $(TESTDIREND) $(MKDIR) "obj/"
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) TestBigInt.cpp

clean:
	-$(RM) $(OBJS)

realclean: clean
	-$(RM) $(BIN)
	-$(RM) obj/

check-syntax:
	$(COMPILE.cc) $(EXPORTFLAGS) -Wall -Wextra -pedantic -fsyntax-only $(CHK_SOURCES)

#----------------------------------------------------------------------------
#       Dependencies
#----------------------------------------------------------------------------


depend:
	-set "VDIR=obj/"& $(MPC_ROOT)/depgen.pl -t make $(CFLAGS) $(CCFLAGS) $(CPPFLAGS) -f $(DEPENDENCIES) $(SRC) 2> $(NUL)

-include $(DEPENDENCIES)
